import React, { useState, useEffect } from 'react';
import { useParams, Link } from 'react-router-dom';
import './scss/styles.css';
import courseImg from './images/course-img-large.jpg';
import teacherImg from './images/teacher.png';
import lessonImg from './images/lesson-img.jpg';

function CourseDescription() {
    const { id } = useParams();
    const [courseData, setCourseData] = useState(null);
    const [loading, setLoading] = useState(true);

    useEffect(() => {
        const fetchCourseData = async () => {
            setLoading(true);

            const data = {
                category: 'IT –ö—É—Ä—Å–∏',
                title: 'HTML/CSS –°–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç',
                lessons: 34,
                duration: '43 –≥. 24 —Ö–≤.',
                description: '–¶–µ–π –∫—É—Ä—Å –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è —Ç–∏—Ö, —Ö—Ç–æ —Ö–æ—á–µ –æ—Å–≤–æ—ó—Ç–∏ –æ—Å–Ω–æ–≤–∏ –≤–µ–±-—Ä–æ–∑—Ä–æ–±–∫–∏ —Ç–∞ —Å—Ç–∞—Ç–∏ —Ñ–∞—Ö—ñ–≤—Ü–µ–º —É –≤–µ—Ä—Å—Ç—Ü—ñ –≤–µ–±-—Å—Ç–æ—Ä—ñ–Ω–æ–∫. –í–∏ –Ω–∞–≤—á–∏—Ç–µ—Å—è —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ —Å—É—á–∞—Å–Ω—ñ, –∞–¥–∞–ø—Ç–∏–≤–Ω—ñ —Ç–∞ –µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ –≤–µ–±-—ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é HTML —Ç–∞ CSS.',
                image: courseImg,
                teachers: [
                    {
                        name: '–í—ñ–∫—Ç–æ—Ä—ñ—è',
                        image: teacherImg
                    }
                ]
            };

            setCourseData(data);
            setLoading(false);
        };

        fetchCourseData();
    }, [id]);

    if (loading) {
        return <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>;
    }

    if (!courseData) {
        return <p>–ö—É—Ä—Å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.</p>;
    }

    return (
        <div className='course-description'>
            <p className='course-description__category'>{courseData.category}</p>
            <h2 className='course-description__title'>{courseData.title}</h2>
            <div className='course-description__content'>
                <p className='course-description__lessons'>{courseData.lessons} —É—Ä–æ–∫–∏</p>
                <p className='course-description__duration'>–¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å: {courseData.duration}</p>
            </div>
            <p className='course-description__details'>{courseData.description}</p>
            <img className='course-description__img' src={courseData.image} alt='course image' />
            <p className='course-description__teachers-title'>–í—á–∏—Ç–µ–ª—ñ:</p>
            <div className='course-description__teachers'>
                {courseData.teachers.map((teacher, index) => (
                    <div key={index} className='course-description__teacher'>
                        <img className='course-description__teacher-img' src={teacher.image} alt='teacher image' />
                        <p className='course-description__teacher-name'>{teacher.name}</p>
                    </div>
                ))}
            </div>
        </div>
    );
}

function LessonItem({ lesson, courseId }) {
    return (
        <Link to={`/courses/${courseId}/lessons/${lesson.id}`} className="lesson">
            <div className='lesson__content'>
                <h3 className="lesson__name">{lesson.name}</h3>
                <p className="lesson__description">{lesson.description}</p>
                <div className="lesson__materials">
                    {lesson.materials.map((material, index) => (
                        <div 
                            key={index} 
                            className="lesson__material-item"
                            onClick={(e) => e.stopPropagation()}
                        >
                            <span className="lesson__material-icon">üîó</span>
                            <span className="lesson__material-text">{material.name}</span>
                        </div>
                    ))}
                </div>
            </div>
            <img src={lesson.image} alt="Lesson image" className="lesson__img" />
        </Link>
    );
}


function CourseModules() {
    const { id: courseId } = useParams();
    const [expandedModules, setExpandedModules] = useState({});

    const toggleModule = (moduleIndex) => {
        setExpandedModules((prevState) => ({
            ...prevState,
            [moduleIndex]: !prevState[moduleIndex],
        }));
    };

    const modules = [
        {
            title: '–ú–æ–¥—É–ª—å 1',
            progress: '–ü—Ä–æ–π–¥–µ–Ω–æ: 2 –∑ 2 —É—Ä–æ–∫—ñ–≤',
            time: '2 –≥–æ–¥. 44 —Ö–≤. –∑ 2 –≥–æ–¥. 44 —Ö–≤.',
            description: '–¶–µ–π –±–ª–æ–∫ –ø–æ–∑–Ω–∞–π–æ–º–∏—Ç—å –≤–∞—Å –∑ –æ—Å–Ω–æ–≤–∞–º–∏ HTML —Ç–∞ CSS. –í—ñ–Ω –¥–æ–ø–æ–º–æ–∂–µ —Ä–æ–∑—ñ–±—Ä–∞—Ç–∏—Å—è, —è–∫ —ñ –¥–µ —Ü—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó –∑–∞—Å—Ç–æ—Å–æ–≤—É—é—Ç—å—Å—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤–µ–±-—Å—Ç–æ—Ä—ñ–Ω–æ–∫, —Ç–∞ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —è–∫–∏—Ö —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤ –º–æ–∂–Ω–∞ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ –Ω–∏–º–∏. –ú–∏ —Ä–æ–∑–≥–ª—è–Ω–µ–º–æ –ø—Ä–∞–∫—Ç–∏—á–Ω—ñ –ø—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è HTML —Ç–∞ CSS –¥–ª—è —Ä–æ–∑—Ä–æ–±–∫–∏ —Å–∞–π—Ç—ñ–≤, –∞ —Ç–∞–∫–æ–∂ —è–∫ —Ü—ñ –Ω–∞–≤–∏—á–∫–∏ –º–æ–∂—É—Ç—å —Å—Ç–∞—Ç–∏ –æ—Å–Ω–æ–≤–æ—é –¥–ª—è –∑–∞—Ä–æ–±—ñ—Ç–∫—É —É —Å—Ñ–µ—Ä—ñ –º–∞–ª–æ–≥–æ —Ç–∞ —Å–µ—Ä–µ–¥–Ω—å–æ–≥–æ –±—ñ–∑–Ω–µ—Å—É.',
            lessons: [
                {
                    id: 1,
                    name: '–£—Ä–æ–∫ ‚Ññ1',
                    description: '–ù–∞ —Ü—å–æ–º—É –∑–∞–Ω—è—Ç—Ç—ñ –º–∏ –ø–æ—á–∏–Ω–∞—î–º–æ –ø—Ä–∞–∫—Ç–∏–∫—É–≤–∞—Ç–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è HTML —Ä–æ–∑–º—ñ—Ç–∫–∏ –Ω–∞ –ø—Ä–∞–∫—Ç–∏—Ü—ñ –í –ø—Ä–æ—Ü–µ—Å—ñ –∑–∞–Ω—è—Ç—Ç—è —Å—Ç–≤–æ—Ä–∏–º–æ –ø–µ—Ä—à—É –≤–µ–±-—Å—Ç–æ—Ä—ñ–Ω–∫—É –∑–∞ –º–∞–∫–µ—Ç–æ–º –≤—ñ–¥ –¥–∏–∑–∞–π–Ω–µ—Ä–∞.',
                    materials: [{ name: '–î–æ–º–∞—à–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è 1.docx', link: '#' }],
                    image: lessonImg
                },
                {
                    id: 2,
                    name: '–£—Ä–æ–∫ ‚Ññ2',
                    description: '–ù–∞ —Ü—å–æ–º—É –∑–∞–Ω—è—Ç—Ç—ñ –º–∏ –ø–æ—á–∏–Ω–∞—î–º–æ –ø—Ä–∞–∫—Ç–∏–∫—É–≤–∞—Ç–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è HTML —Ä–æ–∑–º—ñ—Ç–∫–∏ –Ω–∞ –ø—Ä–∞–∫—Ç–∏—Ü—ñ –í –ø—Ä–æ—Ü–µ—Å—ñ –∑–∞–Ω—è—Ç—Ç—è —Å—Ç–≤–æ—Ä–∏–º–æ –ø–µ—Ä—à—É –≤–µ–±-—Å—Ç–æ—Ä—ñ–Ω–∫—É –∑–∞ –º–∞–∫–µ—Ç–æ–º –≤—ñ–¥ –¥–∏–∑–∞–π–Ω–µ—Ä–∞.',
                    materials: [{ name: '–î–æ–º–∞—à–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è 2.docx', link: '#' }],
                    image: lessonImg
                }
            ]
        },
        {
            title: '–ú–æ–¥—É–ª—å 2',
            progress: '–ü—Ä–æ–π–¥–µ–Ω–æ: 1 –∑ 3 —É—Ä–æ–∫—ñ–≤',
            time: '1 –≥–æ–¥. 30 —Ö–≤. –∑ 3 –≥–æ–¥.',
            description: '–¶–µ–π –±–ª–æ–∫ –ø–æ–∑–Ω–∞–π–æ–º–∏—Ç—å –≤–∞—Å –∑ –æ—Å–Ω–æ–≤–∞–º–∏ HTML —Ç–∞ CSS. –í—ñ–Ω –¥–æ–ø–æ–º–æ–∂–µ —Ä–æ–∑—ñ–±—Ä–∞—Ç–∏—Å—è, —è–∫ —ñ –¥–µ —Ü—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó –∑–∞—Å—Ç–æ—Å–æ–≤—É—é—Ç—å—Å—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤–µ–±-—Å—Ç–æ—Ä—ñ–Ω–æ–∫, —Ç–∞ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —è–∫–∏—Ö —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤ –º–æ–∂–Ω–∞ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ –Ω–∏–º–∏.',
            lessons: [
                {
                    id: 3,
                    name: '–£—Ä–æ–∫ ‚Ññ3',
                    description: '–ù–∞ —Ü—å–æ–º—É –∑–∞–Ω—è—Ç—Ç—ñ –º–∏ –ø–æ—á–∏–Ω–∞—î–º–æ –ø—Ä–∞–∫—Ç–∏–∫—É–≤–∞—Ç–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è HTML —Ä–æ–∑–º—ñ—Ç–∫–∏ –Ω–∞ –ø—Ä–∞–∫—Ç–∏—Ü—ñ –í –ø—Ä–æ—Ü–µ—Å—ñ –∑–∞–Ω—è—Ç—Ç—è —Å—Ç–≤–æ—Ä–∏–º–æ –ø–µ—Ä—à—É –≤–µ–±-—Å—Ç–æ—Ä—ñ–Ω–∫—É –∑–∞ –º–∞–∫–µ—Ç–æ–º –≤—ñ–¥ –¥–∏–∑–∞–π–Ω–µ—Ä–∞.',
                    materials: [{ name: '–î–æ–º–∞—à–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è 3.docx', link: '#' }],
                    image: lessonImg
                }
            ]
        }
    ];

    return (
        <div className="course-modules">
            <ul className="course-modules__list">
                {modules.map((module, index) => (
                    <li key={index} className="course-modules__item">
                        <div className="module">
                            <div className="module__header">
                                <div className="module__info">
                                    <span className="module__number">{module.title}</span>
                                    <div className="module__stats">
                                        <div className="module__progress">
                                            <span className="module__progress-icon">üìã</span>
                                            <span className="module__progress-text">{module.progress}</span>
                                        </div>
                                        <div className="module__time">
                                            <span className="module__time-icon">‚è∞</span>
                                            <span className="module__time-text">{module.time}</span>
                                        </div>
                                    </div>
                                </div>
                                <button
                                    className="module__toggle"
                                    onClick={() => toggleModule(index)}
                                >
                                    {expandedModules[index] ? '–ó–≥–æ—Ä–Ω—É—Ç–∏' : '–†–æ–∑–≥–æ—Ä–Ω—É—Ç–∏'}
                                </button>
                            </div>
                            <div className="module__content">
                                <div className="module__description">
                                    <p className='module__description-text'>{module.description}</p>
                                </div>
                                {expandedModules[index] && (
                                    <ul className="module__lessons">
                                        {module.lessons.map((lesson) => (
                                            <li key={lesson.id}>
                                                <LessonItem lesson={lesson} courseId={courseId} />
                                            </li>
                                        ))}
                                    </ul>
                                )}
                            </div>
                        </div>
                    </li>
                ))}
            </ul>
        </div>
    );
}

function CourseTasks() {
    return (
        <div>
            <h3>–ó–∞–≤–¥–∞–Ω–Ω—è –∫—É—Ä—Å—É</h3>
            <p>–û–ø–∏—Å –∑–∞–≤–¥–∞–Ω—å, —è–∫—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–∫–æ–Ω–∞—Ç–∏ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∫—É—Ä—Å—É.</p>
        </div>
    );
}

function Course() {
    const { id } = useParams();
    const [activeTab, setActiveTab] = useState('description');

    const renderContent = () => {
        switch (activeTab) {
            case 'description':
                return <CourseDescription />;
            case 'modules':
                return <CourseModules />;
            case 'tasks':
                return <CourseTasks />;
            default:
                return <CourseDescription />;
        }
    };

    return (
        <div className='course-info'>
            <div className='container'>
                <nav className='course__nav'>
                    <ul className='course__nav-list'>
                        <li 
                            className={`course__nav-item ${activeTab === 'description' ? 'active' : ''}`}
                            onClick={() => setActiveTab('description')}
                        >
                            –û–ø–∏—Å
                        </li>
                        <li 
                            className={`course__nav-item ${activeTab === 'modules' ? 'active' : ''}`}
                            onClick={() => setActiveTab('modules')}
                        >
                            –ó–∞–Ω—è—Ç—Ç—è
                        </li>
                        <li 
                            className={`course__nav-item ${activeTab === 'tasks' ? 'active' : ''}`}
                            onClick={() => setActiveTab('tasks')}
                        >
                            –ó–∞–≤–¥–∞–Ω–Ω—è
                        </li>
                    </ul>
                </nav>
                <div className='course__content'>
                    {renderContent()}
                </div>
            </div>
        </div>
    );
}

export default Course;